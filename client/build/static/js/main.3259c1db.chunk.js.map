{"version":3,"sources":["components/todos/InputTodo.js","components/todos/EditTodo.js","components/todos/ListTodos.js","components/dashboard/Dashboard.js","components/Login.js","components/Register.js","components/layout/Landing.js","components/layout/Spinner.js","App.js","index.js"],"names":["InputTodo","setTodosChange","useState","description","setDescription","onSubmit","e","a","preventDefault","newHeader","Headers","append","localStorage","token","body","fetch","method","headers","JSON","stringify","res","json","console","error","message","className","type","placeholder","onChange","target","value","EditTodo","todo","updateDescription","myHeaders","todo_id","data-toggle","data-target","id","onClick","data-dismiss","ListTodos","allTodos","todos","setTodos","deleteTodo","filter","useEffect","length","map","Dashboard","setAuth","setLoader","name","setName","setAllTodos","todosChange","getName","data","user_name","removeItem","toast","success","logOut","Login","email","password","text","setText","setItem","to","Register","Landing","Spinner","role","configure","App","isAuthenticated","setIsAuthenticated","loading","setLoading","boolean","isAuth","exact","path","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3259c1db.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useState } from 'react'\r\n\r\nconst InputTodo = ({ setTodosChange }) => {\r\n    const [description, setDescription] = useState('') \r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n\r\n            //to add more than one headers\r\n            const newHeader = new Headers()\r\n\r\n            newHeader.append('Content-Type', 'application/json')\r\n            newHeader.append('token', localStorage.token)\r\n\r\n            const body = { description }\r\n            const res = await fetch('/dashboard/todos', {\r\n                method: 'POST',\r\n                headers: newHeader,\r\n                body: JSON.stringify(body)\r\n            })\r\n            const data = await res.json()\r\n            // to avoid refreshing setTodosChange to true\r\n            setTodosChange(true)\r\n            setDescription('')\r\n        \r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h1 className='text-center mt-5'>Pern Todo List</h1>\r\n            <form className='d-flex m-5' onSubmit={onSubmit}>\r\n                <input className='form-control' type='text' placeholder='Add Todo' onChange={e => setDescription(e.target.value)}  value={description} />\r\n                <button className='btn btn-success ml-3'>Add</button>\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default InputTodo","import React, { Fragment, useState } from 'react'\r\n\r\nconst EditTodo = ({ todo, setTodosChange }) => {\r\n    const [description, setDescription] = useState(todo.description)\r\n\r\n    const updateDescription = async (e) => {\r\n        e.preventDefault()\r\n\r\n        // Headers Constructor\r\n        const myHeaders = new Headers()\r\n        myHeaders.append('Content-Type', 'application/json')\r\n        myHeaders.append('token', localStorage.token)\r\n        \r\n        try {\r\n            const body = { description }\r\n            await fetch(`/dashboard/todos/${todo.todo_id}`,{ \r\n            method: 'PUT',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(body)\r\n            })\r\n            setTodosChange(true)\r\n            // window.location = '/'\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n         \r\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${todo.todo_id}`}>\r\n            Edit\r\n            </button>\r\n\r\n            <div className=\"modal\" id={`id${todo.todo_id}`} onClick={() => setDescription(todo.description)}>\r\n\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n\r\n                <div className=\"modal-header\">\r\n                    <h4 className=\"modal-title\">Modal Heading</h4>\r\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => setDescription(todo.description)}>&times;</button>\r\n                </div>\r\n          \r\n                <div className=\"modal-body\">\r\n                    <input type='text' className='form-control' value={description || ''} onChange={e => setDescription(e.target.value)} />\r\n                </div>\r\n\r\n                <div className=\"modal-footer\">\r\n                <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={(e) => updateDescription(e)}>Edit</button>\r\n\r\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => setDescription(todo.description)}>Close</button>\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </Fragment>\r\n    )       \r\n}\r\n\r\nexport default EditTodo","import React, { Fragment, useEffect, useState } from 'react'\r\nimport EditTodo from './EditTodo'\r\n\r\nconst ListTodos = ({ allTodos, setTodosChange }) => {\r\n\r\n    const [todos, setTodos] = useState([])\r\n\r\n    // Delete todo\r\n    const deleteTodo = async (id) => {\r\n        await fetch(`/dashboard/todos/${id}`,{\r\n            method: 'DELETE',\r\n            headers: { token: localStorage.token }\r\n        })\r\n        setTodos(todos.filter(todo => todo.todo_id !== id))\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTodos(allTodos)\r\n        // eslint-disable-next-line\r\n    }, [allTodos])\r\n\r\n    return (\r\n        <Fragment>\r\n        <div className=\"container\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th>Description</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {todos.length !== 0 && todos[0].todo_id !== null && todos.map(todo => (\r\n                        <tr key={todo.todo_id}>\r\n                            <td>{todo.description}</td>\r\n                            <td><EditTodo todo={todo} setTodosChange={setTodosChange} /></td>\r\n                            <td><button className='btn btn-danger' onClick={() => deleteTodo(todo.todo_id)}>Delete</button></td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListTodos","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { toast } from 'react-toastify'\r\n\r\n// components\r\nimport InputTodo from '../todos/InputTodo'\r\nimport ListTodos from '../todos/ListTodos'\r\n\r\nconst Dashboard = ({ setAuth, setLoader }) => {\r\n    const [name, setName] = useState('')\r\n    const [allTodos, setAllTodos] = useState([])\r\n    const [todosChange, setTodosChange] = useState(false)\r\n\r\n    const getName = async () => {\r\n        try {\r\n            const res = await fetch('/dashboard', {\r\n                method: 'GET', \r\n                // Get the token in localStorage into the header\r\n                headers: { token: localStorage.token }\r\n            })\r\n            const data = await res.json()\r\n            setAllTodos(data)\r\n            setName(data[0].user_name)\r\n\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getName()\r\n        setTodosChange(false)\r\n        // eslint-disable-next-line\r\n    }, [todosChange])\r\n\r\n    // Log out \r\n    const logOut = (e) => {\r\n        e.preventDefault()\r\n        localStorage.removeItem(\"token\")\r\n        setAuth(false)\r\n        setLoader(false)\r\n        toast.success('Logging Out')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n           <div className='d-flex mt-5 justify-content-around'>\r\n           <h2>{name}'s Todo List</h2>\r\n            <button className='btn btn-primary' onClick={e => logOut(e)}>Log Out</button>\r\n           </div>\r\n           \r\n            <InputTodo setTodosChange={setTodosChange} />\r\n            <ListTodos allTodos={allTodos} setTodosChange={setTodosChange} />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Login = ({ setAuth }) => {\r\n    const [text, setText] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { email, password } = text\r\n\r\n    const onChange = e => setText({ ...text, [e.target.name]: e.target.value})\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            // Get the body data\r\n            const body = { email, password }\r\n            const res = await fetch('/auth/login', {\r\n                method: 'POST',\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(body)\r\n            })\r\n            const data = await res.json()\r\n            if(data.token) {\r\n                 // save token to local storage\r\n                localStorage.setItem(\"token\", data.token)\r\n                setAuth(true)\r\n                toast.success('Login Successful')\r\n            } else {\r\n                setAuth(false)\r\n                toast.error(data)\r\n            }\r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h1 className='text-center my-5'>Login</h1>\r\n            <form onSubmit={onSubmit}>\r\n\r\n                <input className='form-control my-3' value={email} onChange={e => onChange(e)} type='email' name='email' placeholder='Email' />\r\n\r\n                <input className='form-control my-3' value={password} onChange={e => onChange(e)} type='password' name='password' placeholder='Password' />\r\n\r\n                <button className='btn btn-success'>Login</button>\r\n            </form>\r\n            <Link to='/register'>Don't have an Account? Register</Link>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Login","import React, { Fragment, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst Register = ({ setAuth }) => {\r\n    const [text, setText] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const { name, email, password } = text\r\n\r\n    const onChange = e => setText({ ...text, [e.target.name]: e.target.value})\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const body = { name, email, password }\r\n            const res = await fetch('/auth/register', {\r\n                method: 'POST',\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            })\r\n            const data = await res.json()\r\n            if(data.token) {\r\n                // save token to local storage\r\n               localStorage.setItem(\"token\", data.token)\r\n               // go to dashboard\r\n               setAuth(true)\r\n               toast.success('Registered Successfully')\r\n           } else {\r\n               setAuth(false)\r\n               toast.error(data)\r\n           }\r\n          \r\n        } catch (err) {\r\n            console.error(err.message)\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Fragment>\r\n            <h1 className='text-center my-5'>Register</h1>\r\n            <form onSubmit={onSubmit}>\r\n                <input className='form-control my-3' value={name} onChange={e => onChange(e)} type='text' name='name' placeholder='Name' />\r\n                <input className='form-control my-3' value={email} onChange={e => onChange(e)} type='email' name='email' placeholder='Email' />\r\n                <input className='form-control my-3' value={password} onChange={e => onChange(e)} type='password' name='password' placeholder='Password' />\r\n                <button className='btn btn-success'>Register</button>\r\n            </form>\r\n            <Link to='/login'>Already Registered? Log in</Link>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default Register","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Landing = () => {\r\n    return (\r\n        <div className='jumbotron my-5'>\r\n            <h1>Welcome to Todo App</h1>\r\n            <p>Sign in to start building your todos</p>\r\n            <Link to='/login' className='btn btn-primary'>Login</Link>\r\n            <Link to='/register' className='btn btn-primary ml-3'>Register</Link>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Landing","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"spinner-border my-5 text-primary\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner","import React, { Fragment, useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Dashboard from './components/dashboard/Dashboard'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport Landing from './components/layout/Landing'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Spinner from './components/layout/Spinner'\n\ntoast.configure()\n\nconst App = () => {\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [loading, setLoading] = useState(true)\n \n  // set isAuthenticated to true or false\n  const setAuth = (boolean) => {\n    setIsAuthenticated(boolean)\n  }\n  const setLoader = (boolean) => {\n    setLoading(boolean)\n  }\n      // check if the person is still Authenticated\n  const isAuth = async () => {\n    try {\n      const res = await fetch('/auth/verify', {\n        method: 'GET',\n        headers: { token: localStorage.token },\n      })\n      const data = await res.json()\n     // if authenticated, then\n     if(data === true) {\n     setIsAuthenticated(true)\n     } else {\n      setLoading(false)\n      setIsAuthenticated(false)\n     }\n    } catch (err) {\n      console.error(err.message)\n    }\n  }\n  useEffect(() => {\n    isAuth()\n    // eslint-disable-next-line\n  }, [])\n  \n    return (\n      <Fragment>\n        <Router>\n         <div className='container'>\n           <Switch>\n           <Route exact path='/' render={props => !isAuthenticated ? (<Landing {...props} />) :( <Redirect to='/dashboard' />) } />\n\n          <Route exact path='/login' render={props => !isAuthenticated ? <Login {...props} setAuth={setAuth} /> : <Redirect to='/dashboard' /> } />\n\n          <Route exact path='/register' render={props => !isAuthenticated ? <Register {...props} setAuth={setAuth} /> : <Redirect to='/login' />} />\n\n          <Route exact path='/dashboard' render={props => isAuthenticated ? <Dashboard {...props} setLoader={setLoader} setAuth={setAuth} /> : loading ? <Spinner /> : <Redirect to='/login' /> } />\n          </Switch>\n         </div>\n       </Router>\n       \n      </Fragment>\n    );\n  \n \n \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}